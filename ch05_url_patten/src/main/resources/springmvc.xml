<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                                                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--声明组件扫描器 -->
    <context:component-scan base-package="ch.controller"/>
<!--    加入注解驱动-->
    <mvc:annotation-driven/>
<!--    声明视图解析器，设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">

<!--      前缀 ：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"></property>
<!--        后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"></property>
    </bean>

<!-- 第二种处理静态资源的方式
         框架会创建ResourceHttpRequestHandler对象，
         这个对象处理静态资源的访问不依赖Tomcat

        属性
               mapping:访问静态资源的uri地址，使用通配符**

               location静态资源在项目中的目录位置


 -->
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/html/**" location="/html/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
</beans>